package cc.unknown.module.impl.exploit.disablers;

import cc.unknown.component.impl.player.RotationComponent;
import cc.unknown.component.impl.player.rotationcomponent.MovementFix;
import cc.unknown.event.Listener;
import cc.unknown.event.Priority;
import cc.unknown.event.annotations.EventLink;
import cc.unknown.event.impl.input.MoveInputEvent;
import cc.unknown.event.impl.player.PreUpdateEvent;
import cc.unknown.module.impl.exploit.Disabler;
import cc.unknown.util.player.MoveUtil;
import cc.unknown.util.vector.Vector2f;
import cc.unknown.value.Mode;

public class OmniSprintDisabler extends Mode<Disabler> {

    public OmniSprintDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    private float forward, strafe;

    @EventLink(value = Priority.HIGH)
    Listener<MoveInputEvent> moveInput = event -> {
        forward = event.getForward();
        strafe = event.getStrafe();
    };

    @EventLink(value = Priority.LOW)
    Listener<PreUpdateEvent> onPreUpdate = event -> {
        RotationComponent.setRotations(new Vector2f((float) Math.toDegrees(MoveUtil.direction(forward, strafe)), mc.player.rotationPitch),
                10, MovementFix.SILENT);
    };
}