package cc.unknown.module.impl.exploit.disablers;

import cc.unknown.event.Listener;
import cc.unknown.event.annotations.EventLink;
import cc.unknown.event.impl.input.MoveInputEvent;
import cc.unknown.event.impl.other.TeleportEvent;
import cc.unknown.event.impl.player.PreMotionEvent;
import cc.unknown.module.impl.exploit.Disabler;
import cc.unknown.util.player.MoveUtil;
import cc.unknown.value.Mode;

public class MineLandKickDisabler extends Mode<Disabler> {

    boolean enabled;

    public MineLandKickDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    @EventLink
    public final Listener<PreMotionEvent> onPreMotionEvent = event -> {
        if (mc.player.ticksExisted > 20 && mc.player.ticksExisted <= 40 && mc.player.onGround) {
            this.enabled = true;
        } else if (mc.player.ticksExisted == 100) {
            this.enabled = false;
        }

        if (this.enabled) {
            event.setOnGround(true);
            event.setPosX(mc.player.posX - 0.1 * (mc.player.ticksExisted % 2 == 0 ? 1 : -1));
            event.setPosZ(mc.player.posZ - 0.1 * (mc.player.ticksExisted % 2 == 0 ? 1 : -1));
            event.setPosY(MoveUtil.roundToGround(mc.player.posY + 1));
        }
    };

    @EventLink
    public final Listener<TeleportEvent> onTeleport = event -> {
        this.enabled = false;
    };

    @EventLink
    public final Listener<MoveInputEvent> onMove = event -> {
        if (this.enabled) {
            event.setForward(0);
            event.setStrafe(0);
            event.setJump(false);
        }
    };
}